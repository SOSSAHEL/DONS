<?xml version="1.0"?>

<project name="eCollecte" default="build" basedir="." description="eCollecte.">
    <property file="./build.properties" />


	<!-- Prepare build folders -->
	<target name="prepare">
		<mkdir dir="docs"/>
		<mkdir dir="reports"/>

        <mkdir dir=".coverage_db"/>
        <mkdir dir="cov"/>

		<echo msg="Making docs, report and build directories"/>
	</target>

	<!-- run all symfony related commands to update local installation -->
	<target name="build" depends="prepare" description="Build application from codebase">

		<!-- composer install -->
		<composer command="install" composer="${composer.bin.path}">
             <arg value="--optimize-autoloader" />
        </composer>
		<echo msg="composer install."/>

		<!-- database update -->
		<SymfonyConsole command="doctrine:schema:update">
			<arg name="force"/>
		</SymfonyConsole>
		<echo msg="app/console doctrine:schema:update --force"/>

		<!-- dump assets -->
		<SymfonyConsole command="assetic:dump">
            <arg name="env" value="${symfony.env}" />
        </SymfonyConsole>

		<echo msg="app/console assetic:dump"/>

        <!-- npm -->
        <exec command="npm install" dir="." />

        <!-- produce bower resources -->
        <exec command="bower install" dir="." />

        <echo msg="bower installation task"/>

        <!-- produce gulp resources -->
        <exec command="gulp" dir="." />
        <echo msg="glup compilation task"/>

        <!-- clear cache -->
        <SymfonyConsole command="cache:clear">
            <arg name="env" value="${symfony.env}" />
        </SymfonyConsole>


        <echo msg="app/console cache:clear"/>
	</target>

	<!-- generate documentation	 -->
	<target name="doc" depends="prepare" description="Generate documentation">
		<phpdoc2 title="eCollecte" destdir="docs">
			<fileset dir="src">
				<include name="**/*.php"/>
			</fileset>
		</phpdoc2>
		<echo msg="Generating PhpDoc."/>
	</target>

    <target name="test" depends="phpspec, behat" description="Run all tests">
    </target>
	<!-- Run unit tests -->
	<target name="phpspec" depends="prepare">
		<exec command="./bin/phpspec run --format=pretty" output="reports/phpspec.log"/>
		<echo msg="run phpspec"/>
	</target>

    <!-- Run unit tests -->
    <target name="behat" depends="prepare">
         <SymfonyConsole command="cache:clear">
            <arg name="env" value="test" />
        </SymfonyConsole>

        <exec command="./bin/behat  --format=pretty" output="reports/behat.log"/>
        <echo msg="run phpspec"/>
    </target>

	<!-- Run integration test (WARNING: require db reset) -->
	<target name="coverage-test" depends="prepare">

        <fileset dir="src" id="php">
            <include name="*.php"/>
            <include name="**/*.php"/>
            <exclude name="*Test.php"/>
            <exclude name="**/*Test.php"/>
        </fileset>

        <coverage-setup database=".coverage_db/coverage.db">
            <fileset refid="php"/>
        </coverage-setup>

		<phpunit codecoverage="true" configuration="app/phpunit.xml">
		  <formatter todir="reports" type="xml" outfile="integration.xml"/>
		</phpunit>

	</target>

    <target name="fixtures" description="Load Fixture. !!Will drop schema">
        <SymfonyConsole command="doctrine:schema:drop">
            <arg name="env" value="${symfony.env}" />
            <arg name="force"/>
        </SymfonyConsole>
        <SymfonyConsole command="doctrine:schema:create">
            <arg name="env" value="${symfony.env}" />
        </SymfonyConsole>

        <SymfonyConsole command="doctrine:fixture:load">
            <arg name="env" value="${symfony.env}" />
            <arg name="no-interaction"/>
        </SymfonyConsole>

    </target>

	<target name="clean">
		<delete dir="reports"/>
		<delete dir="docs"/>
	</target>
</project>

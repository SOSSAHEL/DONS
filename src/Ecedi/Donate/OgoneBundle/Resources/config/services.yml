# @since 2.1.0
parameters:
    donate_ogone:
        pspid: ~
        prod: false
        prefix: ~
        security:
            sha1_in: ~
            sha1_out: ~
        async_postsale: false

services:
    # normalisation des status ogone vers les status de paiement
    donate_ogone.status_normalizer:
        class: Ecedi\Donate\OgoneBundle\Ogone\OgoneStatusNormalizer

    # Plugin de payment methode
    ecollect.pm.ogone:
        class: Ecedi\Donate\OgoneBundle\Service\OgonePaymentMethod
        parent: donate_core.base_payment_method
        tags:
            - {name: donate.payment_method}

#    ecollect.pm.paypal:
#        class: Ecedi\Donate\OgoneBundle\Service\PaypalPaymentMethod
#        tags:
#            - {name: donate.payment_method}

    #Service de gestion de la PostSale (validation de la post-sale et rattachement à l'intent d'origine )
    #   use class Ecedi\Donate\OgoneBundle\Ogone\PostSale\PostSaleManager to handle the post sale inside the controller
    #   use class Ecedi\Donate\OgoneBundle\Ogone\PostSale\MemorySpoolPostSaleManager to handle the post sale on Terminate event (after response is sent)
    donate_ogone.postsale.manager:
        # do post sale handling onTerminate
        class: Ecedi\Donate\OgoneBundle\Ogone\PostSale\MemorySpoolPostSaleManager
        # do post sale handing immediately
        #class: Ecedi\Donate\OgoneBundle\Ogone\PostSale\PostSaleManager
        calls: 
            - [setContainer, ['@service_container']]

    # generateur de Requete Ogone
    donate_ogone.request.factory:
        class: Ecedi\Donate\OgoneBundle\Ogone\RequestBuilder
        calls: 
            - [setContainer, ['@service_container']]

    # Observateur qui envoie des emails au Webmaster quand les status sont en erreur
    ecollect.listener.notify_postsale:
        class: Ecedi\Donate\OgoneBundle\EventListener\NotifyPostSaleStatusListener
        calls: 
            - [setContainer, ['@service_container']]
        tags:
            - {name: kernel.event_subscriber}


    #Observateur traitement de la postsale
    ecollect.listener.handle_postsale:
        class: Ecedi\Donate\OgoneBundle\EventListener\HandlePostSaleListener
        arguments: ['@donate_ogone.postsale.manager', '@logger']
        tags:
            - {name: kernel.event_subscriber}

    #Observateur traite les post-sale délégué après la réponse HTTP
    ecollect.listener.spooled_postsale:
        class: Ecedi\Donate\OgoneBundle\EventListener\HandleSpooledPostSaleListener
        arguments: ['@service_container']
        tags:
            - {name: kernel.event_subscriber}

    # the TPE response is stored serialized, this listener automaticaly deserialize response
    # when a payment is hydrated from Doctine
    ecollect.listener.response_autoloader:
        class: Ecedi\Donate\OgoneBundle\EventListener\PostSaleResponseLoaderListener
        tags:
            - {name: doctrine.event_listener, event: postLoad, connection: default}


